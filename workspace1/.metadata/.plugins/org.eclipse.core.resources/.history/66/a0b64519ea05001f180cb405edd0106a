package com.example.controller;

import org.springframework.web.bind.annotation.*;

import com.example.service.test.Student;

import java.util.Map;

import org.json.JSONObject;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.*;
import org.springframework.boot.actuate.autoconfigure.health.HealthEndpointProperties.Logging;
import org.springframework.stereotype.Controller;

@RestController
@RequestMapping("/home")
public class ControllerTest {
	
	private static final Logger log = LoggerFactory.getLogger(ControllerTest.class);

	@Value("${server.port}")
	String port;
	
    @Resource
    private JdbcTemplate jdbcTemplate;

	//http://192.168.103.175:9001/home/hello
	@RequestMapping("/hello")
	public String home() {

		return "welcome, server port is ï¼š" + port;
	}

	//http://192.168.103.175:9001/home/test/hellohere?username=jack&age=11
	@RequestMapping(value = "/test/{communityId}", method = RequestMethod.POST, params = { "username",
			"age!=10" })
	//@ResponseBody
	public String list(@PathVariable String communityId) {
		
		return communityId;
	}

	//http://192.168.103.175:9001/home/jsontest
    @RequestMapping(value="/jsontest", produces={"application/json; charset=UTF-8"})
    @ResponseBody
    //public String test(@RequestBody Student student) {
    public String test(@RequestBody Student student) {          
 
        return student.getinfo(student.id);
    }
    
    //http://192.168.103.175:9001/home/jsontest2
    @RequestMapping(value="/jsontest2", produces={"application/json; charset=UTF-8"})
    @ResponseBody
    //public String test(@RequestBody Student student) {
    public String test2(@RequestBody Map<String,Object> map) {  
    	
    	log.info("here is the log~~~~~~~~~~~~~~~~~~~~~~~~~~~");
        return "{\"msg\":\"success\"}";
    }
    
     

     
        @RequestMapping("/jdbc/mcc_znjx")
        @ResponseBody
        public List<User> list(ModelMap map) {
            String sql = "SELECT * FROM user";
            List<User> userList = jdbcTemplate.query(sql, new RowMapper<User>() {
                User user = null;
                @Override
                public User mapRow(ResultSet rs, int rowNum) throws SQLException {
                    user = new User();
                    user.setId(rs.getString("id"));
                    user.setName(rs.getString("name"));
                    user.setSex(rs.getString("sex"));
                    user.setAge(rs.getString("age"));
                    return user;
                }
            });
            for (User user : userList) {
                System.out.println(user.toString());
            }
            return userList;
     
        }
     
        @RequestMapping("/userList")
        public String userList(ModelMap map) {
            String sql = "SELECT * FROM user";
            List<User> userList = jdbcTemplate.query(sql, new RowMapper<User>() {
                User user = null;
                @Override
                public User mapRow(ResultSet rs, int rowNum) throws SQLException {
                    user = new User();
                    user.setId(rs.getString("id"));
                    user.setName(rs.getString("name"));
                    user.setSex(rs.getString("sex"));
                    user.setAge(rs.getString("age"));
                    return user;
                }
            });
            map.addAttribute("users", userList);
            return "user";
        }
    }

}
